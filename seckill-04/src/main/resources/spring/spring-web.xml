<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 1.开启springMVC注解模式 -->
	<!-- 简化配置： 
	     (1)自动注册DefaultAnnotationHandlerMapping等 
	     (2) 提供一系列：数据绑定，数字和日期的format 
		@NumberFormat @datetimeFormat xml,json默认读写 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<!-- servlet-mapping映射路径：‘/’ (该处理器其实就是调用tomcat的defaultservlet)-->
	<!-- 静态资源默认servlet配置 1.加入对静态资源的处理：js,jpg,png 2.运许使用“/”做整体映射 
	它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
	如果不是静态资源的请求，才由DispatcherServlet继续处理-->
	<mvc:default-servlet-handler />

	<!-- 扫描使用注解的包，包括子集 
	-->
	<context:component-scan base-package="org.seckill.web" />

	<!-- 配置jsp视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp"></property>
	</bean>

</beans>